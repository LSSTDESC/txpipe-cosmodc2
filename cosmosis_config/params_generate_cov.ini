[runtime]
sampler = test
root = ${COSMOSIS_SRC_DIR}

[DEFAULT]
INPUT_2PT_FILE = summary_statistics_real_from_sacc.fits
OUTPUT_2PT_FILE = summary_statistics_real_from_sacc_theory_wcov.fits
2PT_DATA_SETS = xip gammat wtheta
2PT_DATA_SUFFIXES = None None None None
planck_like_path=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/
y3_6x2_path = /home/chihway/y3-6x2pt

[multinest]
max_iterations=50000
;max_iterations=2
multinest_outfile_root=5x2_realspace
resume=T
#This is the standard run
live_points=500
efficiency=0.3
tolerance=0.1
constant_efficiency=F

[test]
save_dir=test_output
fatal_errors=T

[output]
filename=chain.txt
format = text
verbosity= debug


[fisher]
fisher_outfile_dir = ./fisher/
fisher_outfile_root = fisher
; set step as fraction of range in values file. If maxiter>1, this will adapt per parameter.                                                                                               
step_size = 0.01
use_numdifftools = False
allow_1sided = True
; If not using the modified fisher.py and fisher_sampler.py files, then comment out all fisher lines below here                                                                            
; use line fit (smooth_order=1) or stencil (smooth_order=0) for derivative calculation                                                                                                     
smooth_order = 0
; use 1-sigma estimate (without priors) to calculate a new step-size and recalculate the fisher matrix.                                                                                    
; repeat up to maxiter times, or until total change in all entries of covariance matrix is less than tolerance^2 (in units of range on values file).                                       
; Gets pretty close after ~2-3 iterations for restricted parameter space, but offdiagonals in covariance means it usually maxes out at 5 before hitting a tolerance of 0.01                
maxiter = 3
tolerance = 0.01
; multiply variance of uniform priors by uni_prior_var_factor when converting it to a gaussian prior.                                                                                      
; 0=ignore uniform priors in fisher calc (was the default), 1.0 = equal variance, 3.0 corresponds to 1-sigma = uniform_range/2.                                                            
uni_prior_var_factor = 1
verbose = True
; This won't work (for now) unless you edit the path in fisher_sampler.py. Writes an .npz object so you can play with how the priors affect things                                         
write_priormat = True
; when iterating, restrict step-size so to stay within the defined values ranges instead of just failing.                                                                                  
restrict_to_range = True
; maximum step_size allowed (fraction of values range). Reduce this if cosmosis is failing on certain parameters.                                                                          
max_step_size = 0.05
; write out how marginalized constraints change as you iterate (useful to see how dependent on step size, or to see constraints before the priors are added)                               
write_onesigmas = True

[pipeline]
quiet=F
debug=T
timing=T
modules = consistency camb sigma8_rescale halofit growth high_z_power extrapolate load_fits_nz source_photoz_bias lens_photoz_bias unbiased_galaxies bias_neutrinos multiply_pk IA ia_z_field pk_to_cl bin_bias add_intrinsic shear_m_bias 2pt_shear 2pt_gal 2pt_gal_shear save_2pt
values = values_generate_cov.ini
priors = priors_generate_cov.ini
likelihoods = 
;2pt
extra_output = cosmological_parameters/sigma_8   data_vector/2pt_chi2

[sigma8_rescale]
file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[bin_bias]
file=cosmosis-standard-library/bias/binwise_bias/bin_bias.py
perbin=T

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0
kmin=1e-5
kmax=10.0
nk=200
zmax=4.0
distances_to_lss = T
n_highz_distance = 100

[2pt_like]
file = %(y3_6x2_path)s/modules/2pt_y3/2pt_like.py
data_file = %(INPUT_2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
suffixes = %(2PT_DATA_SUFFIXES)s
include_norm=F
make_covariance=F
covmat_name=COVMAT

angle_range_xip_1_1 = 7.195005 250.0
angle_range_xip_1_2 = 7.195005 250.0
angle_range_xip_1_3 = 5.715196 250.0
angle_range_xip_1_4 = 5.715196 250.0

angle_range_xip_2_1 = 7.195005 250.0
angle_range_xip_2_2 = 4.539741 250.0
angle_range_xip_2_3 = 4.539741 250.0
angle_range_xip_2_4 = 4.539741 250.0

angle_range_xip_3_1 = 5.715196 250.0
angle_range_xip_3_2 = 4.539741 250.0
angle_range_xip_3_3 = 3.606045 250.0
angle_range_xip_3_4 = 3.606045 250.0

angle_range_xip_4_1 = 5.715196 250.0
angle_range_xip_4_2 = 4.539741 250.0
angle_range_xip_4_3 = 3.606045 250.0
angle_range_xip_4_4 = 3.606045 250.0

angle_range_xim_1_1 = 90.579750 250.0
angle_range_xim_1_2 = 71.950053 250.0
angle_range_xim_1_3 = 71.950053 250.0
angle_range_xim_1_4 = 71.950053 250.0

angle_range_xim_2_1 = 71.950053 250.0
angle_range_xim_2_2 = 57.151958 250.0
angle_range_xim_2_3 = 57.151958 250.0
angle_range_xim_2_4 = 45.397414 250.0

angle_range_xim_3_1 = 71.950053 250.0
angle_range_xim_3_2 = 57.151958 250.0
angle_range_xim_3_3 = 45.397414 250.0
angle_range_xim_3_4 = 45.397414 250.0

angle_range_xim_4_1 = 71.950053 250.0
angle_range_xim_4_2 = 45.397414 250.0
angle_range_xim_4_3 = 45.397414 250.0
angle_range_xim_4_4 = 36.060448 250.0

angle_range_gammat_1_1 = 64.0 250.0
angle_range_gammat_1_2 = 64.0 250.0
angle_range_gammat_1_3 = 64.0 250.0
angle_range_gammat_1_4 = 64.0 250.0
angle_range_gammat_2_1 = 40.0 250.0
angle_range_gammat_2_2 = 40.0 250.0
angle_range_gammat_2_3 = 40.0 250.0
angle_range_gammat_2_4 = 40.0 250.0
angle_range_gammat_3_1 = 30.0 250.0
angle_range_gammat_3_2 = 30.0 250.0
angle_range_gammat_3_3 = 30.0 250.0
angle_range_gammat_3_4 = 30.0 250.0
angle_range_gammat_4_1 = 24.0 250.0
angle_range_gammat_4_2 = 24.0 250.0
angle_range_gammat_4_3 = 24.0 250.0
angle_range_gammat_4_4 = 24.0 250.0
angle_range_gammat_5_1 = 21.0 250.0
angle_range_gammat_5_2 = 21.0 250.0
angle_range_gammat_5_3 = 21.0 250.0
angle_range_gammat_5_4 = 21.0 250.0

angle_range_wtheta_1_1 = 43.0 250.0
angle_range_wtheta_2_2 = 27.0 250.0
angle_range_wtheta_3_3 = 20.0 250.0
angle_range_wtheta_4_4 = 16.0 250.0
angle_range_wtheta_5_5 = 14.0 250.0

;Y3 cuts
angle_range_galaxy_cmbkappa_xi_spt_1_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_spt_2_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_spt_3_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_spt_4_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_spt_5_1 = 5.0 250.0

angle_range_shear_cmbkappa_xi_spt_1_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_spt_2_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_spt_3_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_spt_4_1 = 5.0 250.0

angle_range_galaxy_cmbkappa_xi_planck_1_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_planck_2_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_planck_3_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_planck_4_1 = 5.0 250.0
angle_range_galaxy_cmbkappa_xi_planck_5_1 = 5.0 250.0

angle_range_shear_cmbkappa_xi_planck_1_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_planck_2_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_planck_3_1 = 5.0 250.0
angle_range_shear_cmbkappa_xi_planck_4_1 = 5.0 250.0


[extrapolate]
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py 
kmax = 500.

[sigma8_rescale]
file=cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[halofit]
file = cosmosis-standard-library/boltzmann/halofit_takahashi/halofit_interface.so
nk=700

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 0.1
ell_max = 5.0e5
n_ell = 400
position-shear=lens-source
shear-shear = source-source
position-position = lens-lens
intrinsic-intrinsic=source-source
shear-intrinsic=source-source
position-intrinsic=lens-source
verbose = T
get_kernel_peaks=F

[ia_z_field]
file = cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic=T

[IA]
file=cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
do_galaxy_intrinsic=T
method=bk_corrected

[unbiased_galaxies]
file = cosmosis-standard-library/bias/no_bias/no_bias.py
use_lin_power=F

[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T
perbin=F

[load_fits_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(INPUT_2PT_FILE)s  
data_sets = source lens
prefix_section = T
prefix_extension = T

[2pt_shear]
; Type of Hankel transform and output correlation function
; [0 = shear, 1 = matter, 2 = ggl]
;file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = shear_cl
;output_section_name = xip xim
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 20000
xi_type='22'

[2pt_gal]
;file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_cl
;output_section_name = galaxy_xi
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 20000
xi_type='00'


[2pt_gal_shear]
;file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
;input_section_name = galaxy_shear_cl
;output_section_name = galaxy_shear_xi
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 20000
xi_type='02'

[shear_m_bias]
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True

[source_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[lens_photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[growth]
file = cosmosis-standard-library/structure/growth_factor/interface.so
zmin=0.0
zmax=7.0
dz=0.02
zmax_log=1200.0
nz_log=50

[bias_neutrinos]
file = cosmosis-des-library/lss/braganca-neutrino-bias/interface.so
feedback = true
linear_growth_eps_abs = 0.0
linear_growth_eps_rel = 1.0e-6
linear_growth_rk_type = RK45
linear_growth_spline_zmin = 0.0
linear_growth_spline_zmax = 1.00
linear_growth_spline_delta_z = 0.02

[multiply_pk]
file=cosmosis-des-library/lss/braganca-neutrino-bias/bias_pks.py

[high_z_power]
file = cosmosis-des-library/lss/high_z_power/high_z_power.py
sections = matter_power_lin matter_power_nl
zmax = 1200.0
nz = 100

[stop]
file=cosmosis-standard-library/utility/stop/stop.py

[planck_tt_highell]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT,TE,EE likelihood
data_1 = %(planck_like_path)s/plik_lite_v18_TT.clik

;;;;Planck likelihood 2015;;;;
[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;Lite high-ell TT,TE,EE likelihood
data_1 = %(planck_like_path)s/plik_lite_v18_TTTEEE.clik
;;;;Low-ell  TT,EE, BB and TE likelihood
data_2 = %(planck_like_path)s/commander_rc2_v1.1_l2_29_B.clik

[planck_lensing]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
;;;;T and P lensing likelihood
lensing_1 = %(planck_like_path)s/smica_g30_ftl_full_pttptt.clik_lensing

[planck_all]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
data_1 = %(planck_like_path)s/plik_lite_v18_TTTEEE.clik
data_2 = %(planck_like_path)s/commander_rc2_v1.1_l2_29_B.clik
lensing_1 = %(planck_like_path)s/smica_g30_ftl_full_pttptt.clik_lensing

;;;;BAO likelihoods;;;;
[boss_dr12]
file = cosmosis-des-library/external/bao/boss_dr12/boss_dr12.py
;mode = 0: BAO. mode = 1: BAO + FS (measurement of fsig8 included).
mode = 0

[6dfgs]
file = cosmosis-des-library/external/bao/6dfgs/6dfgs.py
;mode = 0: BAO. mode = 1: measurement of fsig8.
mode = 0

[mgs_bao]
file = cosmosis-des-library/external/bao/mgs_bao/mgs_bao.py

;;;;SN likelihood;;;;
[jla]
; As from demo5
file = cosmosis-standard-library/supernovae/jla_v3/jla.so
data_dir = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/supernovae/jla_v3/data
data_file = jla_lcparams.txt
scriptmcut = 10.0
mag_covmat_file = jla_v0_covmatrix.dat
stretch_covmat_file = jla_va_covmatrix.dat
colour_covmat_file = jla_vb_covmatrix.dat
mag_stretch_covmat_file = jla_v0a_covmatrix.dat
mag_colour_covmat_file = jla_v0b_covmatrix.dat
stretch_colour_covmat_file = jla_vab_covmatrix.dat

[riess16]
file = cosmosis-standard-library/likelihood/riess16/riess16.py


[owls]
;file=cosmosis-standard-library/structure/owls/owls_interface.py
file=cosmosis-des-library/tcp/des_cmb_2pt/code_6_x_2pt/owls/owls_interface.py
mode=fixed
powtable=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/structure/owls/powtable_AGN_all.dat 

[save_2pt]
file = %(y3_6x2_path)s/modules/2pt_y3/save_2pt.py
theta_min = 2.5
theta_max = 250.0
n_theta = 20
ell_max = 20000
overwrite = T
filename = %(OUTPUT_2PT_FILE)s
make_covariance = T
;cut_wtheta = 1,2 1,3 1,4 1,5 2,3 2,4 2,5 3,4 3,5 4,5
cl_to_xi_types = 22+ 22- 02+ 00 
spectrum_sections = shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi 
cl_sections = shear_cl shear_cl galaxy_shear_cl galaxy_cl 
output_extensions = xip xim gammat wtheta 
number_density_shear_arcmin2 = 26.13081993 26.12211948 30.18174961 64.10688242
;1.625 1.625 1.625 1.625
number_density_lss_arcmin2 = 3.3521031848909435
;0.02269  0.03916  0.05827  0.04512  0.02783
sigma_e = 0.26012346 0.26004747 0.26012737 0.26022482
;0.3825 0.4697 0.4601 0.4955

;corresponds to 4203.5 sq. deg.
fsky = 0.010747989018758137
;0.1018957

;area = 443.4 deg^2
;NEFF :  <HDF5 dataset "N_eff": shape (4,), type "<f4">
;nEFF :  [4.1711060e+07 4.1697172e+07 4.8177316e+07 1.0232997e+08]
;lens density :  [5350761.18785032]
;n_lens, n_eff, sigma_e, fsky: 
;[5350761.18785032] [4.1711060e+07 4.1697172e+07 4.8177316e+07 1.0232997e+08] [0.26012346 0.26004747 0.26012737 0.26022482] 0.010747989018758137


